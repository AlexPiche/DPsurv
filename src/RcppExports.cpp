// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// rtruncnorm
double rtruncnorm(double y, double mu, double sigma, int K);
RcppExport SEXP DPsurv_rtruncnorm(SEXP ySEXP, SEXP muSEXP, SEXP sigmaSEXP, SEXP KSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type y(ySEXP);
    Rcpp::traits::input_parameter< double >::type mu(muSEXP);
    Rcpp::traits::input_parameter< double >::type sigma(sigmaSEXP);
    Rcpp::traits::input_parameter< int >::type K(KSEXP);
    rcpp_result_gen = Rcpp::wrap(rtruncnorm(y, mu, sigma, K));
    return rcpp_result_gen;
END_RCPP
}
// eStep
NumericMatrix eStep(NumericVector data, NumericVector censoring, NumericVector theta, NumericVector phi, NumericVector w);
RcppExport SEXP DPsurv_eStep(SEXP dataSEXP, SEXP censoringSEXP, SEXP thetaSEXP, SEXP phiSEXP, SEXP wSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type data(dataSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type censoring(censoringSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type theta(thetaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type phi(phiSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type w(wSEXP);
    rcpp_result_gen = Rcpp::wrap(eStep(data, censoring, theta, phi, w));
    return rcpp_result_gen;
END_RCPP
}
// mStep
arma::cube mStep(NumericVector prior, arma::cube posterior, NumericVector data, IntegerVector xi, IntegerVector zeta);
RcppExport SEXP DPsurv_mStep(SEXP priorSEXP, SEXP posteriorSEXP, SEXP dataSEXP, SEXP xiSEXP, SEXP zetaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type prior(priorSEXP);
    Rcpp::traits::input_parameter< arma::cube >::type posterior(posteriorSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type data(dataSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type xi(xiSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type zeta(zetaSEXP);
    rcpp_result_gen = Rcpp::wrap(mStep(prior, posterior, data, xi, zeta));
    return rcpp_result_gen;
END_RCPP
}
// gibbsStep
S4 gibbsStep(S4 DP, S4 DataStorage, IntegerVector xi, IntegerVector zeta);
RcppExport SEXP DPsurv_gibbsStep(SEXP DPSEXP, SEXP DataStorageSEXP, SEXP xiSEXP, SEXP zetaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< S4 >::type DP(DPSEXP);
    Rcpp::traits::input_parameter< S4 >::type DataStorage(DataStorageSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type xi(xiSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type zeta(zetaSEXP);
    rcpp_result_gen = Rcpp::wrap(gibbsStep(DP, DataStorage, xi, zeta));
    return rcpp_result_gen;
END_RCPP
}
